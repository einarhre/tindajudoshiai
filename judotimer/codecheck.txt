Checking comm.c ...
Checking comm.c: ENABLE_NLS...
Checking comm.c: ENABLE_NLS;gettext_noop...
Checking comm.c: WIN32...
Checking comm.c: WIN32;__WIN32__...
1/9 files checked 3% done
Checking main.c ...
Checking main.c: ENABLE_NLS...
Checking main.c: ENABLE_NLS;gettext_noop...
Checking main.c: USE_PANGO...
Checking main.c: WIN32...
2/9 files checked 32% done
Checking menus.c ...
Checking menus.c: ENABLE_NLS...
Checking menus.c: ENABLE_NLS;gettext_noop...
Checking menus.c: WIN32...
3/9 files checked 45% done
Checking show-ad.c ...
show-ad.c:464:9: error: Memory leak: Object [memleak]
        return ((ColorMapObject *) NULL);
        ^
show-ad.c:1436:9: error: Memory leak: ScreenBuffer [memleak]
        GIF_EXIT("Failed to allocate memory required, aborted.");
        ^
Checking show-ad.c: DEBUG...
Checking show-ad.c: ENABLE_NLS...
Checking show-ad.c: ENABLE_NLS;gettext_noop...
Checking show-ad.c: WIN32...
4/9 files checked 69% done
Checking sound.c ...
Checking sound.c: ENABLE_NLS...
Checking sound.c: ENABLE_NLS;gettext_noop...
5/9 files checked 70% done
Checking stopwatch.c ...
Checking stopwatch.c: ENABLE_NLS...
Checking stopwatch.c: ENABLE_NLS;gettext_noop...
Checking stopwatch.c: USE_ISO_8859_1...
Checking stopwatch.c: USE_PANGO...
Checking stopwatch.c: WIN32...
Checking stopwatch.c: WIN32;__WIN32__...
6/9 files checked 83% done
Checking tvlogo.c ...
Checking tvlogo.c: ENABLE_NLS...
Checking tvlogo.c: ENABLE_NLS;gettext_noop...
Checking tvlogo.c: WIN32;__WIN32__...
7/9 files checked 88% done
Checking video.c ...
Checking video.c: ENABLE_NLS...
Checking video.c: ENABLE_NLS;gettext_noop...
Checking video.c: WIN32;__WIN32__...
8/9 files checked 98% done
Checking websock.c ...
Checking websock.c: WIN32;__WIN32__...
9/9 files checked 100% done
comm.c:79:10: error: Array index out of bounds; buffer 'pts' is accessed at offset 0. [ctuArrayIndex]
    x = (pts[0] << 16) | (pts[1] << 12) | (pts[2] << 8) | pts[3];
         ^
stopwatch.c:1002:19: note: Calling function array2int, 1st argument is uninitialized
    bp = array2int(bluepts);
                  ^
comm.c:79:10: note: Using argument pts
    x = (pts[0] << 16) | (pts[1] << 12) | (pts[2] << 8) | pts[3];
         ^
websock.c:68:5: error: Array index out of bounds; buffer 'out' is accessed at offset 0. [ctuArrayIndex]
    out[0] = (unsigned char) cb64[ (int)(in[0] >> 2) ];
    ^
websock.c:233:17: note: Calling function encodeblock, 2nd argument is uninitialized
     encodeblock(&digest[i], out, SHA1_DIGEST_LENGTH - i);
                ^
websock.c:68:5: note: Using argument out
    out[0] = (unsigned char) cb64[ (int)(in[0] >> 2) ];
    ^
